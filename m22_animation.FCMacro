

import FreeCADGui
import Draft
import time
import datetime

ll=20



def say(wort):
   App.Console.PrintMessage(str(wort) + "\n")

# version 0.2

class Actor(object):

	def __init__(self,obj,start=10,end=20):
		self.obj=self.getObject(obj)
		self.start=start
		self.end=end
		self.initPlace=	self.obj.Placement


	def initPlacement(self,tp):
		self.initPlace=tp
		self.obj.Placement=tp
	def getObject(self,name):
		if  isinstance(name,str):
			obj=FreeCAD.ActiveDocument.getObject(name)
		else:
			obj=name
		return obj

	def toInitialPlacement(self):
		self.obj.Placement=self.initPlace
	def setIntervall(self,s,e):
		self.start=s
		self.end=e
	
	

class  Mover(Actor):

	def __init__(self,obj,motion=FreeCAD.Vector(100,0,0) ,start=10,end=20):
 		super(type(self), self).__init__(obj,start,end)
		v=motion
		if   isinstance(motion,str):
			k=motion[0:1]
			say(k)
			if k=='-':
				motion=motion[1:]
				tobj=FreeCAD.ActiveDocument.getObject(motion)
				end=FreeCAD.Vector(tobj.Start)
				start=FreeCAD.Vector(tobj.End)
			else:
				tobj=FreeCAD.ActiveDocument.getObject(motion)
				start=FreeCAD.Vector(tobj.Start)
				end=FreeCAD.Vector(tobj.End)
			v=end.sub(start)
		self.motionVector=v


	def step(self,now):
		if now<self.start or now>self.end:
			pass
		else:
			relativ=1.00/(self.end-self.start)
			v=FreeCAD.Vector(self.motionVector).multiply(relativ)
			Draft.move(self.obj,v,copy=False)
	def reverse(self):
		self.motionVector.multiply(-1)

class  Rotator(Actor):

	def __init__(self,obj,position=FreeCAD.Vector(0,0,0),axis=FreeCAD.Vector(0,0,1),angle=290,start=10,end=90):
 		super(type(self), self).__init__(obj,start,end)
		self.positionVector=position
		self.axisVector=axis
		self.angle=angle

	def step(self,now):
		if now<self.start or now>self.end:
			pass
		else:
			relativ=1.00/(self.end-self.start)
			angle2=self.angle*relativ
			say(angle2)
			say(self.axisVector)
			Draft.rotate([self.obj],angle2,self.positionVector,axis=self.axisVector,copy=False)
	def  setRot(self,dwireName):
		import math
		obj=self.getObject(dwireName)
#		t=App.ActiveDocument.DWire002
		t=obj
		a=t.Shape.Vertexes[0]
		b=t.Shape.Vertexes[1]
		c=t.Shape.Vertexes[2]
		v1=FreeCAD.Vector(a.X,a.Y,a.Z).sub(FreeCAD.Vector(b.X,b.Y,b.Z))
		
		v2=FreeCAD.Vector(c.X,c.Y,c.Z).sub(FreeCAD.Vector(b.X,b.Y,b.Z))
		
		print v1
		axis=v1.cross(v2)
		print axis
		
		
		print v1
		
		dot=v1.dot(v2)
		print dot
		
		cosAngle=dot/(v1.Length *v2.Length)
		
		print cosAngle
		angle=math.acos(cosAngle)/math.pi *180
		
		print angle
		self.axisVector=axis
		self.angle=angle
	def reverse(self):
		self.angle =- self.angle



	
class Manager(object):
	def __init__(self):
		self.targets=[]
		self.fn=''
		self.text=0
		pass

	def register(self,obj):
		self.targets.append(obj)

	
	def run(self,intervall):
		for nw in range(intervall):	
			say(nw)
			for obj in self.targets:
				obj.step(nw)
			#Draft.move(helper,sk,copy=False)
			FreeCADGui.Selection.clearSelection()
			FreeCADGui.updateGui() 
			self.genOutput(nw)
			self.showTime(nw)
			time.sleep(0.02)

	def setOutput(self,path,size_x=640,size_y=480):
		self.fn=path
		self.size_x=size_x
		self.size_y=size_y

	def genOutput(self,nw1):
		if self.fn<>'':
			kf= "%04.f"%nw1
			fn=self.fn+kf+'.png'
			Gui.activeDocument().activeView().saveImage(fn,self.size_x,self.size_y,'Current')

	def setShowTime(self,texter):
		self.text=texter


	def showTime(self,nw1):
		if self.text:
			kf= "%04.f"%nw1
			self.text.LabelText = [unicode(str(kf), 'utf-8'),]

	def finalize(self,wait=5):
			for obj in self.targets:
				obj.toInitialPlacement()
				FreeCADGui.updateGui() 
			time.sleep(wait)
	
 


# vectors for the moves

sk=FreeCAD.Vector(100,0,0)
sk2=FreeCAD.Vector(0,40,0)


# initial placement
rp = App.Placement(App.Vector(1,1,0),App.Rotation(App.Vector(0,0,1),0))
tp = App.Placement(App.Vector(1,1,0),App.Rotation(App.Vector(0,0,1),0))

def init1():
	import Draft
	App.newDocument("Unnamed")
	App.setActiveDocument("Unnamed")

 
	pl = FreeCAD.Placement()
	pl.Rotation.Q = (0.0,-0.0,-0.0,1.0)
	pl.Base = FreeCAD.Vector(-1.32548344135,0.938884139061,0.0)
	Draft.makeRectangle(length=2.2229462862,height=-1.14599096775,placement=pl,face=False,support=None)
	points=[FreeCAD.Vector(-0.566091835499,0.455634981394,0.0),FreeCAD.Vector(1.44974756241,-1.64304709435,0.0),FreeCAD.Vector(-2.43005299568,-1.6982755661,0.0)]
	Draft.makeWire(points,closed=True,face=False,support=None)
	FreeCAD.getDocument("Unnamed").getObject("DWire").MakeFace = True
	FreeCADGui.getDocument("Unnamed").getObject("DWire").ShapeColor = (0.00,1.00,0.00)
	FreeCADGui.getDocument("Unnamed").getObject("Rectangle").ShapeColor = (1.00,0.00,0.00)
	FreeCAD.getDocument("Unnamed").getObject("Rectangle").MakeFace = True
	points=[FreeCAD.Vector(-0.566091835499,0.455634981394,0.0),FreeCAD.Vector(1.44974756241,-1.64304709435,0.0),FreeCAD.Vector(-2.43005299568,-1.6982755661,0.0)]
	Draft.makeWire(points,closed=True,face=False,support=None)
	Gui.getDocument("Unnamed").getObject("DWire001").Visibility=False
	pl = FreeCAD.Placement()
	pl.Rotation.Q = (0.0,-0.0,-0.0,1.0)
	pl.Base = FreeCAD.Vector(-15.3152351379,75.8536605835,0.0)
	Draft.makeRectangle(length=126.597446442,height=-87.5533657074,placement=pl,face=False,support=None)
	Gui.SendMsgToActiveView("ViewFit")
def finish1():
	try:
		App.ActiveDocument=App.getDocument("Unnamed")
		Gui.ActiveDocument=Gui.getDocument("Unnamed")
		App.closeDocument("Unnamed")
		App.setActiveDocument("")
		App.ActiveDocument=None
		Gui.ActiveDocument=None
	except:
		pass

def test1():

	text=Draft.makeText(["textanzeige"],point=FreeCAD.Vector(4,60,0.0))
	FreeCADGui.getDocument("Unnamed").getObject("Text").FontSize = 10


	# the entertainer
	m=Manager()
	m.setShowTime(text)

	# place to write the film output
	fn='/home/microelly2/pic2/AA_B'
 	m.setOutput(fn)

	# actor 1 an rectangle, that should move - move the table
	r1=Mover("Rectangle",sk2,5,45)
# 	r1.initPlacement(rp)
	m.register(r1)

	# second  movement of the same rectangle
	r2=Mover("Rectangle",sk,25,80)
	m.register(r2)

    # actor 2  a triangle, that rotates    - drill the screw
	r3=Rotator("DWire")
	r3.initPlacement(tp)
	m.register(r3)
	
	# run the animation for 100 frames
##	m.run(100)
	m.run(ll)

	# bring all back to the initial position
	m.finalize(0)


def test2():
	# move along a line "Line"
	text=Draft.makeText(["textanzeige"],point=FreeCAD.Vector(4,60,0.0))
	FreeCADGui.getDocument("Unnamed").getObject("Text").FontSize = 10

	m=Manager()
	m.setShowTime(text)
	r1=Mover("Rectangle","Line",0,10)
 	r1.initPlacement(rp)
	m.register(r1)
	m.run(10)

	App.getDocument("Unnamed").removeObject("Text")

def test3():
	# move the line backward  "-Line"
	m=Manager()
	r1=Mover("Rectangle","-Line",0,30)
	m.register(r1)
	m.run(30)

def test4():
	# rot clockwise and counterclockwise
	m=Manager()
	r3=Rotator("DWire")
	r3.setIntervall(10,40)
	r3.initPlacement(tp)
	r3.setRot("DWire002")
	r3.reverse()
	m.register(r3)
	r4=Rotator("DWire")
	r4.setIntervall(50,80)
	r4.setRot("DWire002")
	m.register(r4)
	m.run(90)



# main

if 0:
	init1()
	test1()
	finish1()

if 0:
	test2()
if 0:
	test3()

if 1:
	test4()
